/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'

import { useLoader } from 'react-three-fiber'
import * as THREE from 'three';


export default function Model2(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/models/2.gltf')

  const texture = useTexture('/models/textures/6.jpg')
  texture.needsUpdate = true

  const planeTexture = React.useMemo(() => new THREE.ImageLoader().load('/models/textures/6.jpg'), [])
  

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Plane001.geometry}
        position={[3.13, 4.36, 0.06]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <meshBasicMaterial attach="material" onUpdate={(self) => (self.needsUpdate = true)} >
          <texture attach="map" image={planeTexture} onUpdate={self => planeTexture && (self.needsUpdate = true)} />
        </meshBasicMaterial>
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/2.gltf')

//material={materials['Material.002']}
//<meshBasicMaterial attach="material" map={texture} toneMapped={false} />

//<primitive attach="map" object={texture} />